{"version":3,"sources":["components/Header/Header.js","utils/constants.js","hooks/useMoviesFetch.js","components/MovieItem/MovieItem.js","utils/movieItemSchema.js","hooks/useAddMovie.js","hooks/useDeleteMovie.js","components/InputModal/MovieDetails.js","components/InputModal/NewMovieSearch.js","hooks/useTmdbApi.js","components/Main/Main.js","hooks/useUsersFetch.js","components/Sidebar/Sidebar.js","App.js","index.js"],"names":["Header","API_ROOT","useMoviesFetch","userid","useState","movies","setMovies","fetch","setFetch","useEffect","axios","get","then","response","data","catch","error","console","log","MovieItem","movie","toggleMovieDetails","setWatchlistMovie","setWatchlistMovieData","className","onClick","src","poster","alt","title","movieItem","director","screenwriter","moviecast","runtime","year","rating","platform","useAddMovie","movieInput","post","useDeleteMovie","movieid","delete","MovieDetails","movieData","watchlistMovie","useParams","addMovie","setMovieInput","deleteMovie","closeModal","href","imdblink","htmlFor","type","id","value","watched","genres","length","overview","setTimeout","e","NewMovieSearch","setMovieSearch","searchResults","selectMovie","movieSearch","selectedSearchResult","setSelectedSearchResult","selectSearchResult","key","prevState","handleClickSelection","target","parentElement","dataset","placeholder","onChange","currentTarget","onKeyDown","size","map","searchResult","i","index","data-value","data-newvalue","release_date","slice","useTmdbData","setSearchResults","setMovieData","apiTmdb","process","apiUrl","parsedSearchResult","split","join","result","results","a","basicData","creditsData","handleMovieData","directors","crew","filter","job","screenwriters","cast","genre","name","actor","imdb_id","poster_path","Main","showMovieDetails","useTmdbApi","watchlistMovieData","useUsersFetch","users","setUsers","Sidebar","user","to","String","activeStyle","color","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86529fa5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default Header;\r\n","const API_ROOT =\r\n    process.env.NODE_ENV !== \"production\"\r\n        ? \"https://movie-picker-backend.herokuapp.com/\"\r\n        : \"http://localhost:5000/\";\r\nexport default API_ROOT;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_ROOT from \"../utils/constants\"\r\n\r\nfunction useMoviesFetch(userid) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [fetch, setFetch] = useState(true);\r\n\r\n    // get all movies for one user\r\n    useEffect(() => {\r\n        if (fetch) {\r\n            axios\r\n                .get(`https://movie-picker-backend.herokuapp.com/users/${userid}/movies`)\r\n                .then((response) => {\r\n                    setMovies(response.data);\r\n                    setFetch(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [userid, fetch]);\r\n\r\n    return [movies, setFetch];\r\n}\r\n\r\nexport default useMoviesFetch;\r\n","import React from \"react\";\r\nimport \"./MovieItem.css\";\r\n\r\nfunction MovieItem({\r\n    movie,\r\n    toggleMovieDetails,\r\n    setWatchlistMovie,\r\n    setWatchlistMovieData,\r\n}) {\r\n    const showMovie = () => {\r\n        setWatchlistMovieData(movie);\r\n        setWatchlistMovie(true);\r\n        toggleMovieDetails(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"MovieItem\" onClick={showMovie}>\r\n            <img\r\n                src={movie.poster}\r\n                alt={`Poster ${movie.title}`}\r\n                className=\"MovieItem__poster\"\r\n            />\r\n            <div className=\"MovieItem__info\">\r\n                <div className=\"MovieItem__title\">{movie.title}</div>\r\n                {/* <div>Genres: {movie.genres}</div>\r\n                <div>Director: {movie.director}</div>\r\n                <div>Screenwriter: {movie.screenwriter}</div>\r\n                <div>Cast: {movie.moviecast}</div>\r\n                <div>Runtime: {movie.runtime}min</div>\r\n                <div>imdb Link: {movie.imdblink}</div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieItem;\r\n","const movieSchema = [\r\n    {\r\n        name: \"title\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"year\",\r\n        type: \"number\",\r\n    },\r\n    {\r\n        name: \"runtime\",\r\n        type: \"number\",\r\n    },\r\n    {\r\n        name: \"genres\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"overview\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"director\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"screenwriter\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"cast\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"imdblink\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"poster\",\r\n        type: \"text\",\r\n    },\r\n    {\r\n        name: \"watched\",\r\n        type: \"checkbox\",\r\n    },\r\n];\r\n\r\nconst movieItem = {\r\n    title: \"\",\r\n    director: \"\",\r\n    screenwriter: \"\",\r\n    moviecast: \"\",\r\n    runtime: null,\r\n    year: null,\r\n    rating: null,\r\n    poster: \"\",\r\n    platform: \"\",\r\n    userid: null,\r\n};\r\n\r\nexport { movieSchema, movieItem };\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { movieItem } from \"../utils/movieItemSchema\";\r\nimport API_ROOT from \"../utils/constants\"\r\n\r\nfunction useAddMovie(userid) {\r\n    const [movieInput, setMovieInput] = useState({\r\n        ...movieItem,\r\n        userid: userid,\r\n    });\r\n\r\n    const addMovie = () => {\r\n        axios\r\n            .post(`${API_ROOT}users/${userid}/movies`, movieInput)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return [addMovie, setMovieInput];\r\n}\r\n\r\nexport default useAddMovie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport API_ROOT from \"../utils/constants\"\r\n\r\nfunction useDeleteMovie() {\r\n    const deleteMovie = (userid, movieid) => {\r\n        axios\r\n            .delete(`${API_ROOT}users/${userid}/movies/${movieid}`)\r\n\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return deleteMovie;\r\n}\r\n\r\nexport default useDeleteMovie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useAddMovie from \"../../hooks/useAddMovie\";\r\nimport useDeleteMovie from \"../../hooks/useDeleteMovie\";\r\nimport \"./MovieDetails.css\";\r\nimport { FaImdb } from \"react-icons/fa\";\r\nimport { VscTrash } from \"react-icons/vsc\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\n\r\nfunction MovieDetails({\r\n    toggleMovieDetails,\r\n    movieData,\r\n    setFetch,\r\n    watchlistMovie,\r\n}) {\r\n    const { userid } = useParams();\r\n\r\n    const [addMovie, setMovieInput] = useAddMovie(userid);\r\n    const deleteMovie = useDeleteMovie();\r\n\r\n    const deleteMovieFromWatchlist = () => {\r\n        deleteMovie(userid, movieData.movieid);\r\n        setTimeout(() => setFetch(true), 500);\r\n        toggleMovieDetails(false);\r\n    };\r\n\r\n    const addMovieToTheWatchlist = () => {\r\n        addMovie();\r\n        setTimeout(() => setFetch(true), 500);\r\n        toggleMovieDetails(false);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        toggleMovieDetails(false);\r\n        setFetch(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (movieData) {\r\n            setMovieInput({ ...movieData });\r\n        }\r\n    }, [movieData, setMovieInput]);\r\n\r\n    return (\r\n        <div className=\"MovieDetails\">\r\n            {movieData.title ? (\r\n                <>\r\n                    <div className=\"movie-attributes--title\">\r\n                        {movieData.title} ({movieData.year})\r\n                    </div>\r\n                    <div className=\"movie-attributes__poster-info\">\r\n                        <img\r\n                            src={movieData.poster}\r\n                            className=\"movie-attributes--poster\"\r\n                            alt={movieData.title}\r\n                        />\r\n                        <div className=\"movie-attributes__info\">\r\n                            <div className=\"movie-attributes--imdb-and-watched\">\r\n                                <div className=\"movie-attributes__imdb-icon\">\r\n                                    <a href={movieData.imdblink}>\r\n                                        <FaImdb className=\"imbd-icon\" />\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"movie-attributes movie-attributes--watched\">\r\n                                    <label\r\n                                        htmlFor=\"watched\"\r\n                                        className=\"watched__label\"\r\n                                    >\r\n                                        I have watched this\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"watched\"\r\n                                        value={movieData.watched}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"movie-attributes\">\r\n                                <div className=\"movie-attributes__category\">\r\n                                    Runtime\r\n                                </div>\r\n                                {movieData.runtime} min\r\n                            </div>\r\n                            {movieData.genres ? (\r\n                                <div className=\"movie-attributes\">\r\n                                    <div className=\"movie-attributes__category\">\r\n                                        Genre\r\n                                    </div>\r\n                                    {movieData.genres}\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            {movieData.director.length ? (\r\n                                <div className=\"movie-attributes\">\r\n                                    <div className=\"movie-attributes__category\">\r\n                                        Director\r\n                                    </div>\r\n                                    {movieData.director}\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            {movieData.screenwriter.length ? (\r\n                                <div className=\"movie-attributes\">\r\n                                    <div className=\"movie-attributes__category\">\r\n                                        Screenwriter\r\n                                    </div>\r\n                                    {movieData.screenwriter}\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            {movieData.moviecast ? (\r\n                                <div className=\"movie-attributes\">\r\n                                    <div className=\"movie-attributes__category\">\r\n                                        Cast\r\n                                    </div>\r\n                                    {movieData.moviecast}\r\n                                </div>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"movie-overview\">{movieData.overview}</div>\r\n                    <div className=\"NewMovieInput__buttons\">\r\n                        {!watchlistMovie ? (\r\n                            <div>\r\n                                <div\r\n                                    className=\"NewMovieInput__btn--add\"\r\n                                    onClick={(e) => addMovieToTheWatchlist(e)}\r\n                                >\r\n                                    Add movie\r\n                                </div>\r\n                                <div\r\n                                    className=\"NewMovieInput__btn--add NewMovieInput__btn--dismiss\"\r\n                                    onClick={closeModal}\r\n                                >\r\n                                    Dissmiss Movie\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"delete-movie\">\r\n                                {\" \"}\r\n                                <VscTrash\r\n                                    className=\"delete-icon\"\r\n                                    onClick={deleteMovieFromWatchlist}\r\n                                />\r\n                                <AiFillCloseCircle\r\n                                    className=\"close-icon\"\r\n                                    onClick={closeModal}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { useState } from \"react\";\r\nimport { RiAddFill } from \"react-icons/ri\";\r\nimport \"./NewMovieSearch.css\";\r\n\r\nfunction NewMovieSearch({\r\n    setMovieSearch,\r\n    searchResults,\r\n    selectMovie,\r\n    movieSearch,\r\n    toggleMovieDetails,\r\n    setWatchlistMovie,\r\n}) {\r\n    const [selectedSearchResult, setSelectedSearchResult] = useState(0);\r\n\r\n    const selectSearchResult = (e) => {\r\n        switch (e.key) {\r\n            case \"ArrowDown\":\r\n                console.log(selectedSearchResult);\r\n                setSelectedSearchResult((prevState) =>\r\n                    prevState < searchResults.length - 1\r\n                        ? prevState + 1\r\n                        : prevState\r\n                );\r\n                break;\r\n            case \"ArrowUp\":\r\n                setSelectedSearchResult((prevState) =>\r\n                    prevState ? prevState - 1 : 0\r\n                );\r\n                break;\r\n            case \"Enter\":\r\n                toggleMovieDetails(true);\r\n                selectMovie(selectedSearchResult);\r\n                setSelectedSearchResult(0);\r\n                setMovieSearch(\"\");\r\n                setWatchlistMovie(false);\r\n                toggleMovieDetails(true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleClickSelection = (e) => {\r\n        selectMovie(e.target.parentElement.dataset.value);\r\n        setSelectedSearchResult(0);\r\n        setMovieSearch(\"\");\r\n        setWatchlistMovie(false);\r\n        toggleMovieDetails(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"NewMovieSearch\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"NewMovieSearch__input\"\r\n                placeholder=\"Add a new movie\"\r\n                value={movieSearch}\r\n                onChange={(e) => setMovieSearch(e.currentTarget.value)}\r\n                onKeyDown={selectSearchResult}\r\n            />\r\n            <button\r\n                className=\"NewMovieSearch__button\"\r\n                onClick={() => toggleMovieDetails(true)}\r\n            >\r\n                <RiAddFill size={30} />\r\n            </button>\r\n            <div className=\"SearchResults\">\r\n                {searchResults.length > 0 &&\r\n                    searchResults\r\n                        .map((searchResult, i) => (\r\n                            <div\r\n                                className={`SearchResult ${\r\n                                    i === selectedSearchResult ? \"selected\" : \"\"\r\n                                }`}\r\n                                key={i}\r\n                                index={i}\r\n                                data-value={i}\r\n                                data-newvalue={i}\r\n                                onKeyDown={selectSearchResult}\r\n                                onClick={handleClickSelection}\r\n                            >\r\n                                <div className={`SearchResult__title`}>\r\n                                    {searchResult.title} (\r\n                                    {searchResult.release_date\r\n                                        ? searchResult.release_date.slice(0, 4)\r\n                                        : \"\"}\r\n                                    )\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                        .slice(0, 8)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewMovieSearch;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { movieItem } from \"../utils/movieItemSchema\";\r\n\r\nfunction useTmdbData(movieSearch, userid) {\r\n    const [searchResults, setSearchResults] = useState(\"\");\r\n\r\n    const [movieData, setMovieData] = useState({\r\n        ...movieItem,\r\n        userid: userid,\r\n    });\r\n\r\n    const apiTmdb = process.env.REACT_APP_TMDB_API_TOKEN;\r\n    const apiUrl = `https://api.themoviedb.org/3/`;\r\n    const baseUrl = \"http://image.tmdb.org/t/p/\";\r\n\r\n    useEffect(() => {\r\n        if (movieSearch.length) {\r\n            const parsedSearchResult = movieSearch.split(\" \").join(\"%20\");\r\n            axios\r\n                .get(\r\n                    `${apiUrl}search/movie?api_key=${apiTmdb}&language=en-US&query=${parsedSearchResult}&include_adult=false&page=1`\r\n                )\r\n                .then((result) => {\r\n                    setSearchResults(result.data.results);\r\n                })\r\n                .catch(() => console.log(\"request failed\"));\r\n        } else {\r\n            setSearchResults(\"\");\r\n        }\r\n    }, [movieSearch]);\r\n\r\n    const selectMovie = async (index) => {\r\n        try {\r\n            const basicData = await axios.get(\r\n                `${apiUrl}movie/${searchResults[index].id}?api_key=${apiTmdb}&language=en-US`\r\n            );\r\n            const creditsData = await axios.get(\r\n                `${apiUrl}movie/${searchResults[index].id}/credits?api_key=${apiTmdb}&language=en-US`\r\n            );\r\n\r\n            handleMovieData(basicData.data, creditsData.data);\r\n            console.log(creditsData.data);\r\n\r\n            setSearchResults(\"\");\r\n        } catch {\r\n            console.log(\"selected movie request failed\");\r\n        }\r\n    };\r\n\r\n    const handleMovieData = (basicData, creditsData) => {\r\n        const directors = creditsData.crew.filter(\r\n            (crew) => crew.job === \"Director\"\r\n        );\r\n        const screenwriters = creditsData.crew.filter(\r\n            (crew) =>\r\n                crew.job === \"Screenplay\" ||\r\n                crew.job === \"Script\" ||\r\n                crew.job === \"Writer\"\r\n        );\r\n        const cast = creditsData.cast.slice(0, 3);\r\n\r\n        setMovieData({\r\n            title: basicData.title,\r\n            year: basicData.release_date.slice(0, 4),\r\n            runtime: basicData.runtime,\r\n            genres: basicData.genres.map((genre) => genre.name).join(\", \"),\r\n            overview: basicData.overview,\r\n            director: directors.map((director) => director.name).join(\", \"),\r\n            screenwriter: screenwriters\r\n                .map((screenwriter) => screenwriter.name)\r\n                .join(\", \"),\r\n            cast: cast.map((actor) => actor.name).join(\", \"),\r\n            imdblink: `https://www.imdb.com/title/${basicData.imdb_id}`,\r\n            poster: `${baseUrl}w500/${basicData.poster_path}`,\r\n            watched: false,\r\n            userid: userid,\r\n        });\r\n    };\r\n\r\n    return [movieData, searchResults, selectMovie];\r\n}\r\n\r\nexport default useTmdbData;\r\n\r\n// ***** maybe necessary for getting configuration data but doesn't seem to be needed\r\n// useEffect(() => {\r\n//     axios\r\n//         .get(`${apiUrl}configuration?api_key=${apiTmdb}`)\r\n//         .then((result) => console.log(result.data));\r\n// });\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useMoviesFetch from \"../../hooks/useMoviesFetch\";\r\nimport MovieItem from \"../MovieItem/MovieItem\";\r\nimport MovieDetails from \"../InputModal/MovieDetails\";\r\nimport NewMovieSearch from \"../InputModal/NewMovieSearch\";\r\nimport useTmdbApi from \"../../hooks/useTmdbApi\";\r\n\r\nimport \"./Main.css\";\r\n\r\nfunction Main() {\r\n    const { userid } = useParams();\r\n    const [movies, setFetch] = useMoviesFetch(userid);\r\n    const [showMovieDetails, toggleMovieDetails] = useState(false);\r\n\r\n    const [movieSearch, setMovieSearch] = useState(\"\");\r\n    const [movieData, searchResults, selectMovie] = useTmdbApi(movieSearch);\r\n    const [watchlistMovie, setWatchlistMovie] = useState(false);\r\n    const [watchlistMovieData, setWatchlistMovieData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setFetch(true);\r\n    }, [userid]);\r\n\r\n    console.log(userid);\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            {showMovieDetails ? (\r\n                <div className=\"Main__inputModal\">\r\n                    <MovieDetails\r\n                        movieData={\r\n                            watchlistMovie ? watchlistMovieData : movieData\r\n                        }\r\n                        toggleMovieDetails={toggleMovieDetails}\r\n                        setFetch={setFetch}\r\n                        watchlistMovie={watchlistMovie}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            <NewMovieSearch\r\n                setMovieSearch={setMovieSearch}\r\n                searchResults={searchResults}\r\n                selectMovie={selectMovie}\r\n                movieSearch={movieSearch}\r\n                toggleMovieDetails={toggleMovieDetails}\r\n                setWatchlistMovie={setWatchlistMovie}\r\n            />\r\n            <div className=\"Main__movielist\">\r\n                {movies.length &&\r\n                    movies.map((movie, index) => (\r\n                        <MovieItem\r\n                            key={index}\r\n                            movie={movie}\r\n                            setWatchlistMovie={setWatchlistMovie}\r\n                            setWatchlistMovieData={setWatchlistMovieData}\r\n                            toggleMovieDetails={toggleMovieDetails}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_ROOT from \"../utils/constants\"\r\n\r\nfunction useUsersFetch() {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://movie-picker-backend.herokuapp.com/users`) //this url returns a Json object with the user data\r\n            .then((response) => {\r\n                setUsers(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n    return users;\r\n}\r\n\r\nexport default useUsersFetch;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useUsersFetch from \"../../hooks/useUsersFetch\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const users = useUsersFetch();\r\n\r\n    return (\r\n        <div className=\"Sidebar\">\r\n            <div className=\"movie-logo\"> {/* <h4>Watch List</h4> */}</div>\r\n            <div className=\"sidebar__navlink\">\r\n                {users.map((user) => (\r\n                    <div className=\"sidebar-user\">\r\n                        <NavLink\r\n                            className=\"navlink\"\r\n                            to={String(user.userid)} //creates route to /:userid\r\n                            activeStyle={{\r\n                                color: \"Green\",\r\n                            }}\r\n                        >\r\n                            <h3 className=\"Sidebar__name\">{user.name}</h3>\r\n                        </NavLink>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Main from \"./components/Main/Main\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <div className=\"App__main-and-sidebar\">\r\n                <Sidebar />\r\n                <Switch>\r\n                    <Route exact path=\"/movie-api-frontend\"></Route>\r\n                    <Route path=\"/movie-api-frontend/:userid\">\r\n                        <Main />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}